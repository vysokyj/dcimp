package cz.jerzy.dcimp;

import lombok.*;
import org.apache.commons.lang3.tuple.Pair;

import java.time.Instant;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import static org.apache.commons.lang3.StringUtils.*;

@Data
@AllArgsConstructor
@NoArgsConstructor
@Builder
public class SfvMetadata {

    private Date imported;
    private Date created;
    private String original;
    private List<Pair<String, String>> checksums;

    public String getFilename() {
        if (checksums == null || checksums.isEmpty()) {
            return null;
        }
        return checksums.get(0).getKey();
    }

    public String getChecksum() {
        if (checksums == null || checksums.isEmpty()) {
            return null;
        }
        return checksums.get(0).getValue();
    }

    public SfvMetadata(List<String> lines) {
        checksums = new ArrayList<>(1);
        for (String line : lines) {
            final String s = trimToEmpty(line);
            if (startsWith(s, ";")) {
                final String[] parts = split(s, ":", 2);
                if (parts.length != 2) {
                    continue;
                }
                final String key = trimToEmpty(replace(parts[0], ";", ""));
                final String val = trimToEmpty(parts[1]);
                if (contains(key, "Original")) {
                    this.setOriginal(val);
                }
                if (contains(key, "Imported")) {
                    this.setImported(parse(val));
                }
                if (contains(key, "Created")) {
                    this.setCreated(parse(val));
                }
            } else if (isNotBlank(s)) {
                final String[] parts = split(s, " ");
                if (parts.length != 2) {
                    continue;
                }
                final String key = trimToEmpty(parts[0]);
                final String val = trimToEmpty(parts[1]);
                this.getChecksums().add(Pair.of(key, val));
            }
        }
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("; Generated by DCIMP\n");
        sb.append("; Imported:").append(format(imported)).append('\n');
        sb.append("; Created:").append(format(created)).append('\n');
        sb.append("; Original:").append(original).append('\n');
        if (checksums == null || checksums.isEmpty()) {
            return sb.toString();
        }
        for (Pair<String, String> pair : checksums) {
            sb.append(pair.getKey()).append(" ").append(pair.getValue()).append('\n');
        }
        return sb.toString();
    }

    @SneakyThrows
    private Date parse(String date) {
        String s = trimToNull(date);
        if (s == null) {
            return null;
        }
        return Date.from(Instant.parse(date));
    }

    private String format(Date date) {
        if (date == null) {
            return "";
        }
        return date.toInstant().toString();
    }

}
