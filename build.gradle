plugins {
    id 'java'
    id 'jacoco'
    id 'idea'
    id 'eclipse'
    id 'org.springframework.boot' version '3.0.2'
    id 'io.spring.dependency-management' version '1.1.0'
    //id 'org.graalvm.buildtools.native' version '0.9.19'
    id 'io.freefair.lombok' version '6.6.1'
    id 'org.sonarqube' version '3.3'
    id "org.owasp.dependencycheck" version "7.4.3"
}

repositories {
    mavenLocal()
    mavenCentral()
    gradlePluginPortal()
}

dependencies {
    implementation 'com.drewnoakes:metadata-extractor:2.16.0'
    //implementation 'org.slf4j:slf4j-log4j12:1.7.32'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'commons-io:commons-io:2.11.0'
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-autoconfigure'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'org.postgresql:postgresql'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'
    testImplementation 'org.assertj:assertj-core:3.22.0'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'    
}

group = 'cz.jerzy.dcimp'
version = '1.0.0-SNAPSHOT'
sourceCompatibility = 17
targetCompatibility = 17

springBoot {
    mainClass = 'cz.jerzy.dcimp.Application'
}

// graalvmNative {
//     //toolchainDetection = false
//     binaries {
//         main {
//             useFatJar = true
//             javaLauncher = javaToolchains.launcherFor {
//                 languageVersion = JavaLanguageVersion.of(17)
//                 vendor = JvmVendorSpec.matching("GraalVM Community")
//             }
//         }
//     }
// }

sonarqube {
    properties {
        property "sonar.projectKey", "vysokyj_dcimp"
        property "sonar.organization", "vysokyj"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

eclipse {
    classpath {
        defaultOutputDir = file('build/classes/main')
    }
}

test {
    useJUnitPlatform()
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}
